//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Calc.h"
#include <vector>
#include <algorithm>
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TCalcForm *CalcForm;
std::vector<TButton*> buttons;
//std::vector<int> order;
//int index;
//---------------------------------------------------------------------------
__fastcall TCalcForm::TCalcForm(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
/* обработка события показа формы */
void __fastcall TCalcForm::FormShow(TObject *Sender)
{
	buttons.insert(buttons.end(), CalcForm -> Button_0);
	buttons.insert(buttons.end(), CalcForm -> Button_1);
	buttons.insert(buttons.end(), CalcForm -> Button_2);
	buttons.insert(buttons.end(), CalcForm -> Button_3);
	buttons.insert(buttons.end(), CalcForm -> Button_4);
	buttons.insert(buttons.end(), CalcForm -> Button_5);
	buttons.insert(buttons.end(), CalcForm -> Button_6);
	buttons.insert(buttons.end(), CalcForm -> Button_7);
	buttons.insert(buttons.end(), CalcForm -> Button_8);
	buttons.insert(buttons.end(), CalcForm -> Button_9);

	int i = rand() % 10;
	//if (std::find(order.begin(), order.end(), i) != order.end() && order.size() < 9) {
		//order.insert(order.end(), i);
	/}

	//index = 0;
	Timer1 -> Enabled = true;
}
//---------------------------------------------------------------------------
void __fastcall TCalcForm::Timer1Timer(TObject *Sender)
{
	//buttons[index] -> Visible = true;
	//index++;
}
//---------------------------------------------------------------------------
